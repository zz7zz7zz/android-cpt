if(isModuleApplication.toBoolean()){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}

apply plugin: 'com.squareup.wire'
wire {
    java {
        android = true
    }
}

android {
    compileSdkVersion       androidConfig.compileSdkVersion
    buildToolsVersion       androidConfig.buildToolsVersion

    defaultConfig {

        if(isModuleApplication.toBoolean()){
            applicationId       applicationIdConfig.app_im
        }

        minSdkVersion       androidConfig.minSdkVersion
        targetSdkVersion    androidConfig.targetSdkVersion
        versionCode         androidConfig.versionCode
        versionName         androidConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        ndk {
            for (def v : ndkAbiFiltersConfig){
                abiFilters v
            }
        }
        
//        sourceSets {
//            main {
//                // let gradle pack the shared library into apk
//                jniLibs.srcDirs = ['../repository_so/signature']
//            }
//        }
//
//        packagingOptions {
//            pickFirst 'lib/x86/libsignature.so'
//            pickFirst 'lib/armeabi-v7a/libsignature.so'
//
//            merge 'lib/x86/libsignature.so'
//            merge 'lib/armeabi-v7a/libsignature.so'
//
//          exclude 'lib/x86/libsignature.so'
//          exclude 'lib/armeabi-v7a/libsignature.so'
//        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            if(isModuleApplication.toBoolean()){
                manifest.srcFile 'src/main/debug/AndroidManifest_debug.xml'
                java.srcDirs = ['src/main/java','src/main/debug/java']
                res.srcDirs = ['src/main/res','src/main/debug/res']
                assets.srcDirs = ['src/main/assets','src/main/debug/assets']
                jniLibs.srcDirs = ['src/main/jniLibs','../repository_so/signature','src/main/debug/jniLibs']
            }else{
                manifest.srcFile 'src/main/AndroidManifest.xml'
                jniLibs.srcDirs = ['../repository_so/signature']
                java{
                    exclude '**/debug/**'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    resourcePrefix 'im_'
}

dependencies {

    dependenciesConfig.each { k, v -> implementation v}

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //基类组件库
    implementation project(':app_core')
    implementation project(path: ':lib_pay:lib_pay')
    implementation project(path: ':lib_analysis:lib_analysis')

    //ARouter引用
//    compile 'com.alibaba:arouter-api:1.5.1'
//    annotationProcessor 'com.alibaba:arouter-compiler:1.5.1'

}